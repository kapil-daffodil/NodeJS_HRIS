/**
 * Created with IntelliJ IDEA.
 * User: Administrator
 * Date: 7/25/13
 * Time: 1:37 PM
 * To change this template use File | Settings | File Templates.
 */

var http = require('http');
var ServerError = require("../error/servererror.js");
var QueryString = require("querystring");

var HOSTNAME = "127.0.0.1";
var PORT = 1337;


exports.call = function (service, options, callback) {
    if ('function' === typeof options) callback = options, options = {};
    var path = service.path
    var queryString = "";
    if(Object.keys(options).length>0){
        queryString = QueryString.stringify(options);
    }


    var serverOptions = {
        hostname:HOSTNAME,
        port:PORT,
        path:path,
        method:service.method,
        headers:{
            'Content-Type':'application/x-www-form-urlencoded',
            'Content-Length':queryString.length
        }
    };


    var req = http.request(serverOptions, function (res) {
        if (options.response) {
            res.setEncoding('binary');
        } else {
            res.setEncoding('utf8');
        }

        var body = '';
        res.on('data', function (chunk) {
            body += chunk;
        });

        res.on('end', function () {
            try {
                if (options.response) {
                    callback(null, body);
                    return;
                }
                response = JSON.parse(body);
                if (response.status == "error") {
                    var error = new ServerError({message:response.response, code:response.code})
                    if (response.stack) {
                        error.stack = response.stack;
                    }
                    throw error;
                }
                callback(null, response.response);
            } catch (err) {
                callback(err);
            }
        });
    });

    req.on('error', function (err) {
        console.log("err>>" + err);
        callback(err);
    });
    req.write(queryString);
    req.end();
}


exports.Services = new function () {
    this.QUERY = {path:"/data", method:"POST"};
    this.Query = new function () {
        this.QUERY = "query";
    }
    this.UPDATE = {path:"/data", method:"POST"};
    this.Update = new function () {
        this.UPDATES = "updates";
    }

    this.LOGIN = {path:"/login", method:"POST"};
    this.Login = new function () {
        this.USERNAME = "username";
        this.PASSWORD = "password";
        this.USERGROUP = "usergroup";
    }

    this.CREATE_USER = {path:"/createuser", method:"POST"};
    this.CreateUser = new function () {
        this.USERNAME = "username";
        this.PASSWORD = "password";
        this.USERGROUP = "usergroup";
    }

    this.LOG = {path:"/log", method:"POST"};
    this.Log = new function () {
        this.LOGID = "logid";
        this.LOG = "log";
    }

    this.LOGOUT = {path:"/logout", method:"POST"};

    this.CURRENT_USER = {path:"/currentuser", method:"POST"};

    this.RENDER_FILE = {
        path:"/file/render", method:"POST"
    }

    this.RenderFile = new function () {
        this.FILE_KEY = "filekey";
    }
}



